apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.postgres.name }}-deployment
  namespace: {{ .Values.postgres.namespace }}
  labels:
    app: {{ .Values.postgres.name }}
spec:
  serviceName: {{ .Values.postgres.name }}-service
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.postgres.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgres.name }}
    spec:
      volumes:
        - name: {{ .Values.postgres.name }}-configmap
          configMap:
            name: {{ .Values.postgres.name }}-configmap
        - name: {{ .Values.postgres.name }}-secret
          secret:
            secretName: {{ .Values.postgres.name }}-secret
      containers:
        - name: {{ .Values.postgres.name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: {{ .Values.postgres.name }}-secret
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/
              name: {{ .Values.postgres.name }}-configmap
            - mountPath: /var/lib/postgresql/data
              name: {{ .Values.postgres.name }}-volume
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.postgres.name }}-volume
      spec:
        accessModes: [ "ReadWriteMany" ]
        storageClassName: {{ .Values.postgres.name }}-local-storage
        resources:
          requests:
            storage: {{ .Values.volume.capacity.storage }}